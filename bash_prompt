# the prompt that i want
# {time} relative/dir (branch*) $#

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM='gnome-256color';
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM='xterm-256color';
fi;

prompt_git() {
	local s='';
	local branchName='';

	# Check if the current directory is in a Git repository.
	if [ $(git rev-parse --is-inside-work-tree &>/dev/null; echo "${?}") == '0' ]; then

		# check if the current directory is in .git before running git checks
		if [ "$(git rev-parse --is-inside-git-dir 2> /dev/null)" == 'false' ]; then

			# Ensure the index is up to date.
			git update-index --really-refresh -q &>/dev/null;

			# Check for uncommitted changes in the index.
			if ! $(git diff --quiet --ignore-submodules --cached); then
				s+='+';
			fi;

			# Check for unstaged changes.
			if ! $(git diff-files --quiet --ignore-submodules --); then
				s+='!';
			fi;

			# Check for untracked files.
			if [ -n "$(git ls-files --others --exclude-standard)" ]; then
				s+='?';
			fi;

			# Check for stashed files.
			if $(git rev-parse --verify refs/stash &>/dev/null); then
				s+='$';
			fi;

		fi;

		# Get the short symbolic ref.
		# If HEAD isnâ€™t a symbolic ref, get the short SHA for the latest commit
		# Otherwise, just give up.
		branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
			git rev-parse --short HEAD 2> /dev/null || \
			echo '(unknown)')";

		[ -n "${s}" ] && s="${s}";

		echo -e "${3}(${1}${branchName}${2}${s}${3}) ";
	else
		return;
	fi;
}

### colors
IBlack="\e[0;90m"       # Intensif Black
Green="\e[0;32m"        # Normal Green
Blue="\e[0;34m"         # Normal Blue
IRed="\e[0;91"          # Intensif Red
BRed="\e[1;31m"         # Bold Red
BPurple="\e[1;35m"      # Bold Purple
Yellow="\e[0;33m"       # Normal Yellow
BYellow="\e[1;33m"      # Bold Yellow
reset="\e[0m";         # Text Reset

### actual prompt
PS1="\[${IBlack}\]\t ";     # time
PS1+="\[${BYellow}\]\w ";    # working directory
PS1+="\$(prompt_git \"${BPurple}\" \"${BRed}\" \"${IBlack}\")"; # Git repository details
PS1+="\[${reset}\]\$ "; # `$` (and reset color)
export PS1;

#export PS1=$IBlack$Time24h$Color_Off'$(git branch &>/dev/null;\
#if [ $? -eq 0 ]; then \
#  echo "$(echo `git status` | grep "nothing to commit" > /dev/null 2>&1; \
#  if [ "$?" -eq "0" ]; then \
#    # @4 - Clean repository - nothing to commit
#    echo "'$Green'"$(__git_ps1 " (%s)"); \
#  else \
#    # @5 - Changes to working tree
#    echo "'$IRed'"$(__git_ps1 " {%s}"); \
#  fi) '$BYellow$PathShort$Color_Off' \$ "; \
#else \
#  # @2 - Prompt when not in GIT repo
#  echo " '$Yellow$PathShort$Color_Off' \$ "; \
#fi)'
